{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Circuit Decomposition","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNhLGwA9CmX6Zy7kF/OSeOA"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"rD6_0y5Jv0YZ","colab_type":"code","outputId":"13581a7c-bde3-47d1-b065-c5d690edec6e","executionInfo":{"status":"ok","timestamp":1589421939645,"user_tz":-330,"elapsed":44056,"user":{"displayName":"Vinit Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoL8sImEqXRxPWWhRxjJ5WXMgF2SYIIK4QOnexgbk=s64","userId":"08885898808014521859"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["!pip install qiskit"],"execution_count":52,"outputs":[{"output_type":"stream","text":["Collecting qiskit\n","  Downloading https://files.pythonhosted.org/packages/87/f1/6e1907eb0e8332773600256b140f583620ebe0a154fcb033644df68ea400/qiskit-0.19.1.tar.gz\n","Collecting qiskit-terra==0.14.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/55/c3/6c3561cbcf69a791307ada32d61b4eeb7ab6a38ac968e0f1e36f0e40b249/qiskit_terra-0.14.1-cp36-cp36m-manylinux2010_x86_64.whl (6.7MB)\n","\u001b[K     |████████████████████████████████| 6.7MB 2.6MB/s \n","\u001b[?25hCollecting qiskit-aer==0.5.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/88/69/7a779e893a0b8497369b1aab10acf3ab71a5bf01d5373cba9582932bbadf/qiskit_aer-0.5.1-cp36-cp36m-manylinux2010_x86_64.whl (23.4MB)\n","\u001b[K     |████████████████████████████████| 23.4MB 1.5MB/s \n","\u001b[?25hCollecting qiskit-ibmq-provider==0.7.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/3c/64/ed7db4e735e498b8a7f71851da94b1ab8a3761eedfad9d7c6c65a0108c8f/qiskit_ibmq_provider-0.7.0-py3-none-any.whl (155kB)\n","\u001b[K     |████████████████████████████████| 163kB 46.4MB/s \n","\u001b[?25hCollecting qiskit-ignis==0.3.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/b9/f5/25c92e7c816da820163d0e951b5f340a5f69a4088c42fb44df4a9ba6bf14/qiskit_ignis-0.3.0-py3-none-any.whl (172kB)\n","\u001b[K     |████████████████████████████████| 174kB 52.4MB/s \n","\u001b[?25hCollecting qiskit-aqua==0.7.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/26/8e/fcf8ac193ef07cd80944daad8614e0ecdf5eba4760df500e41de0f3958fc/qiskit_aqua-0.7.0-py3-none-any.whl (1.9MB)\n","\u001b[K     |████████████████████████████████| 1.9MB 49.8MB/s \n","\u001b[?25hCollecting python-constraint>=1.4\n","  Downloading https://files.pythonhosted.org/packages/37/8b/5f1bc2734ca611943e1d6733ee244238679f6410a10cd45ede55a61a8402/python-constraint-1.4.0.tar.bz2\n","Requirement already satisfied: dill>=0.3 in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (0.3.1.1)\n","Collecting fastjsonschema>=2.10\n","  Downloading https://files.pythonhosted.org/packages/3a/2b/5e93ebbdc92fe742bfc006f79336c2ddcb436747ef579bc05057c43ad876/fastjsonschema-2.14.4-py3-none-any.whl\n","Requirement already satisfied: networkx>=2.2; python_version > \"3.5\" in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (2.4)\n","Requirement already satisfied: scipy>=1.4 in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (1.4.1)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (2.6.0)\n","Requirement already satisfied: python-dateutil>=2.8.0 in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (2.8.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (1.18.4)\n","Collecting marshmallow-polyfield<6,>=5.7\n","  Downloading https://files.pythonhosted.org/packages/0c/7e/ceb805d05cd03709b8de122b4ac1e736c4eb91d05281ad2a2bcb484accef/marshmallow-polyfield-5.9.tar.gz\n","Collecting marshmallow<4,>=3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/5a/44/bb46a3a5c4609616c8501776ef77048b6b50345289d53d6b60da5dab3aa6/marshmallow-3.6.0-py2.py3-none-any.whl (45kB)\n","\u001b[K     |████████████████████████████████| 51kB 7.4MB/s \n","\u001b[?25hCollecting retworkx>=0.3.2\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/28/44/e28d30808fc093bb82393737f36f1fd370afe5ed82a08c382c4672340916/retworkx-0.3.4-cp36-cp36m-manylinux2010_x86_64.whl (763kB)\n","\u001b[K     |████████████████████████████████| 768kB 49.4MB/s \n","\u001b[?25hRequirement already satisfied: psutil>=5 in /usr/local/lib/python3.6/dist-packages (from qiskit-terra==0.14.1->qiskit) (5.4.8)\n","Collecting sympy>=1.3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ce/5b/acc12e3c0d0be685601fc2b2d20ed18dc0bf461380e763afc9d0a548deb0/sympy-1.5.1-py2.py3-none-any.whl (5.6MB)\n","\u001b[K     |████████████████████████████████| 5.6MB 43.7MB/s \n","\u001b[?25hCollecting ply>=3.10\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a3/58/35da89ee790598a0700ea49b2a66594140f44dec458c07e8e3d4979137fc/ply-3.11-py2.py3-none-any.whl (49kB)\n","\u001b[K     |████████████████████████████████| 51kB 7.6MB/s \n","\u001b[?25hCollecting pybind11>=2.4\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/89/e3/d576f6f02bc75bacbc3d42494e8f1d063c95617d86648dba243c2cb3963e/pybind11-2.5.0-py2.py3-none-any.whl (296kB)\n","\u001b[K     |████████████████████████████████| 296kB 48.8MB/s \n","\u001b[?25hRequirement already satisfied: cython>=0.27.1 in /usr/local/lib/python3.6/dist-packages (from qiskit-aer==0.5.1->qiskit) (0.29.17)\n","Requirement already satisfied: urllib3>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from qiskit-ibmq-provider==0.7.0->qiskit) (1.24.3)\n","Collecting requests-ntlm>=1.1.0\n","  Downloading https://files.pythonhosted.org/packages/03/4b/8b9a1afde8072c4d5710d9fa91433d504325821b038e00237dc8d6d833dc/requests_ntlm-1.1.0-py2.py3-none-any.whl\n","Collecting websockets<8,>=7\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/43/71/8bfa882b9c502c36e5c9ef6732969533670d2b039cbf95a82ced8f762b80/websockets-7.0-cp36-cp36m-manylinux1_x86_64.whl (63kB)\n","\u001b[K     |████████████████████████████████| 71kB 9.8MB/s \n","\u001b[?25hRequirement already satisfied: requests>=2.19 in /usr/local/lib/python3.6/dist-packages (from qiskit-ibmq-provider==0.7.0->qiskit) (2.23.0)\n","Collecting nest-asyncio!=1.1.0,>=1.0.0\n","  Downloading https://files.pythonhosted.org/packages/74/b4/b24e0a271fb78990c2c62238321686454824b1357ce7abcf20f431fd903d/nest_asyncio-1.3.3-py3-none-any.whl\n","Requirement already satisfied: setuptools>=40.1.0 in /usr/local/lib/python3.6/dist-packages (from qiskit-ignis==0.3.0->qiskit) (46.1.3)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from qiskit-aqua==0.7.0->qiskit) (2.10.0)\n","Collecting docplex\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/00/06/ad4441a00b8a9ff415882ff31273fe6519034879b6c2b65c47758a0278d5/docplex-2.14.186.tar.gz (572kB)\n","\u001b[K     |████████████████████████████████| 573kB 36.2MB/s \n","\u001b[?25hCollecting pyscf; sys_platform != \"win32\"\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7a/ea/8ebe88368935dcc9a1a309764846e0bf5d04352d44067741aab3626ceb7f/pyscf-1.7.1-cp36-cp36m-manylinux1_x86_64.whl (24.3MB)\n","\u001b[K     |████████████████████████████████| 24.3MB 1.3MB/s \n","\u001b[?25hCollecting dlx\n","  Downloading https://files.pythonhosted.org/packages/54/c0/b8fb5bb727e983b6f5251433ef941b48f38c65bb0bd6ec509e9185bcd406/dlx-1.0.4.tar.gz\n","Collecting cplex; python_version >= \"3.6\" and python_version < \"3.8\"\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d9/13/3103ddf6a3402cbebac0ecc37d63326238e61d798cfda85afbd409acb22f/cplex-12.10.0.1-cp36-cp36m-manylinux1_x86_64.whl (31.0MB)\n","\u001b[K     |████████████████████████████████| 31.0MB 146kB/s \n","\u001b[?25hRequirement already satisfied: fastdtw in /usr/local/lib/python3.6/dist-packages (from qiskit-aqua==0.7.0->qiskit) (0.3.4)\n","Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.6/dist-packages (from qiskit-aqua==0.7.0->qiskit) (0.22.2.post1)\n","Collecting quandl\n","  Downloading https://files.pythonhosted.org/packages/07/ab/8cd479fba8a9b197a43a0d55dd534b066fb8e5a0a04b5c0384cbc5d663aa/Quandl-3.5.0-py2.py3-none-any.whl\n","Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.6/dist-packages (from networkx>=2.2; python_version > \"3.5\"->qiskit-terra==0.14.1->qiskit) (4.4.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.8.0->qiskit-terra==0.14.1->qiskit) (1.12.0)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.6/dist-packages (from sympy>=1.3->qiskit-terra==0.14.1->qiskit) (1.1.0)\n","Collecting ntlm-auth>=1.0.2\n","  Downloading https://files.pythonhosted.org/packages/50/09/5e397eb18685b14fd8b209e26cdb4fa6451c82c1bcc651fef05fa73e7b27/ntlm_auth-1.4.0-py2.py3-none-any.whl\n","Collecting cryptography>=1.3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/3c/04/686efee2dcdd25aecf357992e7d9362f443eb182ecd623f882bc9f7a6bba/cryptography-2.9.2-cp35-abi3-manylinux2010_x86_64.whl (2.7MB)\n","\u001b[K     |████████████████████████████████| 2.7MB 37.8MB/s \n","\u001b[?25hRequirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests>=2.19->qiskit-ibmq-provider==0.7.0->qiskit) (2.9)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests>=2.19->qiskit-ibmq-provider==0.7.0->qiskit) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests>=2.19->qiskit-ibmq-provider==0.7.0->qiskit) (2020.4.5.1)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn>=0.20.0->qiskit-aqua==0.7.0->qiskit) (0.14.1)\n","Requirement already satisfied: pandas>=0.14 in /usr/local/lib/python3.6/dist-packages (from quandl->qiskit-aqua==0.7.0->qiskit) (1.0.3)\n","Requirement already satisfied: more-itertools in /usr/local/lib/python3.6/dist-packages (from quandl->qiskit-aqua==0.7.0->qiskit) (8.2.0)\n","Collecting inflection>=0.3.1\n","  Downloading https://files.pythonhosted.org/packages/52/c1/36be286d85dbd76527fb613527222a795d7c071da195fa916e7bf3cb03cb/inflection-0.4.0-py2.py3-none-any.whl\n","Requirement already satisfied: cffi!=1.11.3,>=1.8 in /usr/local/lib/python3.6/dist-packages (from cryptography>=1.3->requests-ntlm>=1.1.0->qiskit-ibmq-provider==0.7.0->qiskit) (1.14.0)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.14->quandl->qiskit-aqua==0.7.0->qiskit) (2018.9)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.6/dist-packages (from cffi!=1.11.3,>=1.8->cryptography>=1.3->requests-ntlm>=1.1.0->qiskit-ibmq-provider==0.7.0->qiskit) (2.20)\n","Building wheels for collected packages: qiskit, python-constraint, marshmallow-polyfield, docplex, dlx\n","  Building wheel for qiskit (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for qiskit: filename=qiskit-0.19.1-cp36-none-any.whl size=2895 sha256=e20fae2f9d8d0d0111ad1e7e7227cc07196f395c95c3b8758ad3760c966e8da9\n","  Stored in directory: /root/.cache/pip/wheels/d1/90/5d/ba984dddc140eb252858e3c2c3309c267059458308c3f91ef3\n","  Building wheel for python-constraint (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for python-constraint: filename=python_constraint-1.4.0-py2.py3-none-any.whl size=24080 sha256=d08ec89bc5f120a1d73c3750fed8af399438b0b9ad118470943886c57c5dc338\n","  Stored in directory: /root/.cache/pip/wheels/34/31/15/7b070b25d0a549d20ce2e9fe6d727471c2c61ef904720fd40c\n","  Building wheel for marshmallow-polyfield (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for marshmallow-polyfield: filename=marshmallow_polyfield-5.9-cp36-none-any.whl size=8537 sha256=49a07ad6527477a1eddae25eb3037bb911631d98869a8db980e9542675e72452\n","  Stored in directory: /root/.cache/pip/wheels/69/27/3e/7472f75eab2db111aa387715fe009af15899459517fc1a1906\n","  Building wheel for docplex (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for docplex: filename=docplex-2.14.186-cp36-none-any.whl size=634442 sha256=7b210bf4d8a37a15a232a5a1286e1aee0dc590185b47aaaf1933317555bc41a9\n","  Stored in directory: /root/.cache/pip/wheels/aa/28/cd/ba75f92d49b25dacec6b80f99efcc393dc84abf33f96632ac4\n","  Building wheel for dlx (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for dlx: filename=dlx-1.0.4-cp36-none-any.whl size=5712 sha256=33f93987e7c6afc6f2a832be9eb047184a6f047487f2c3cf7e9ca2c48e267baf\n","  Stored in directory: /root/.cache/pip/wheels/bb/ba/15/fdd0deb104df3254912998150ba9245668db06b00af5912d1a\n","Successfully built qiskit python-constraint marshmallow-polyfield docplex dlx\n","Installing collected packages: python-constraint, fastjsonschema, marshmallow, marshmallow-polyfield, retworkx, sympy, ply, qiskit-terra, pybind11, qiskit-aer, ntlm-auth, cryptography, requests-ntlm, websockets, nest-asyncio, qiskit-ibmq-provider, qiskit-ignis, docplex, pyscf, dlx, cplex, inflection, quandl, qiskit-aqua, qiskit\n","  Found existing installation: sympy 1.1.1\n","    Uninstalling sympy-1.1.1:\n","      Successfully uninstalled sympy-1.1.1\n","Successfully installed cplex-12.10.0.1 cryptography-2.9.2 dlx-1.0.4 docplex-2.14.186 fastjsonschema-2.14.4 inflection-0.4.0 marshmallow-3.6.0 marshmallow-polyfield-5.9 nest-asyncio-1.3.3 ntlm-auth-1.4.0 ply-3.11 pybind11-2.5.0 pyscf-1.7.1 python-constraint-1.4.0 qiskit-0.19.1 qiskit-aer-0.5.1 qiskit-aqua-0.7.0 qiskit-ibmq-provider-0.7.0 qiskit-ignis-0.3.0 qiskit-terra-0.14.1 quandl-3.5.0 requests-ntlm-1.1.0 retworkx-0.3.4 sympy-1.5.1 websockets-7.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"T_Mw6X700ltY","colab_type":"code","colab":{}},"source":["from qiskit import QuantumRegister, QuantumCircuit, execute\n","from qiskit.quantum_info.operators import Operator\n","from qiskit.visualization import plot_histogram, plot_state_city\n","from qiskit import Aer\n","from qiskit.compiler import transpile"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QhvUqytOa7gi","colab_type":"code","colab":{}},"source":["import numpy as np\n","from math import sin, cos, atan2\n","import matplotlib.pyplot as plt\n","from numpy.linalg import norm,svd"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_m7eMShSwkr4","colab_type":"code","colab":{}},"source":["def state_prep(ckt,A,q):\n","    if q==1:\n","        ckt.u3(2*atan2(A[1],A[0]),0,0,0)\n","        return ckt\n","    \n","    n=q-q//2 #n>=m\n","    m=q//2\n","    A=np.reshape(A,(2**m,2**n))\n","    A=np.transpose(A)\n","    \n","    U,S,V=np.linalg.svd(A)\n","    ckt=state_prep(ckt,S,q//2)\n","    \n","    for i in range(m):\n","        ckt.cx(i,i+n)\n","    if q%2==1:\n","        ckt.cx(q//2,q-1)\n","    ckt.barrier()\n","    \n","    ckt.unitary(Operator(U), list(range(n)))\n","    ckt.unitary(Operator(np.transpose(V)), list(range(n,q)))\n","    ckt.barrier()\n","    print(q,\"Q   done\")\n","    return ckt"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"KNXutkUP_lJD","colab_type":"code","colab":{}},"source":["def direct_sum(A,B):\n","  n=np.shape(A)[0]\n","  m=np.shape(B)[0]\n","  res=np.zeros((n+m,n+m))\n","  res[:n,:n]=A\n","  res[n:,n:]=B\n","  return res\n","\n","def genY(C,S):\n","  n=np.shape(C)[0]\n","  m=np.shape(S)[0]\n","  res=np.zeros((n+m,n+m))\n","  res[:n,:n]=C\n","  res[:n,n:]=-S\n","  res[n:,:n]=S\n","  res[n:,n:]=C\n","  return res"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-BxP66_TvzKv","colab_type":"code","colab":{}},"source":["def CSD(U,q):\n","  n=2**q\n","  A=U[:n//2,:n//2]\n","  B=U[n//2:,n//2:]\n","  U1,C,V1=np.linalg.svd(A)\n","  U2,C,V2=np.linalg.svd(B)\n","  V1=V1.T\n","  V2=V2.T\n","  \n","  S=U2.T@U[n//2:,:n//2]@V1      \n","  #S=-U1.T@U[:n//2,n//2:]@V2 \n","  #S=np.sin(np.arccos(C))#(1-C**2)**0.5   #Doesn't take care of the sign of Sine\n","\n","  C=np.diag(C)\n","\n","  return U1,U2,genY(C,S),V1.T,V2.T"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4jIi4YEs7DPy","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":185},"outputId":"a6138953-09ca-4736-e026-fc7efa88a932","executionInfo":{"status":"ok","timestamp":1589422923297,"user_tz":-330,"elapsed":1458,"user":{"displayName":"Vinit Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoL8sImEqXRxPWWhRxjJ5WXMgF2SYIIK4QOnexgbk=s64","userId":"08885898808014521859"}}},"source":["q=2\n","n=2**q\n","\n","A=np.random.rand(n,n)\n","U,S,V=np.linalg.svd(A)\n","\n","ckt=QuantumCircuit(2,1)\n","ckt.unitary(U,[0,1])\n","\n","ckt=transpile(ckt,basis_gates=['u3','cx'],seed_transpiler=0)\n","\n","ckt.draw(output='mpl')"],"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<Figure size 840.392x204.68 with 1 Axes>"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"code","metadata":{"id":"ACVitDtr-3nh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":185},"outputId":"6bb25ed3-2894-4e6d-a2d3-2bfe857da66f","executionInfo":{"status":"ok","timestamp":1589426129338,"user_tz":-330,"elapsed":3923,"user":{"displayName":"Vinit Singh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoL8sImEqXRxPWWhRxjJ5WXMgF2SYIIK4QOnexgbk=s64","userId":"08885898808014521859"}}},"source":["ckt=QuantumCircuit(2)\n","ckt.crz(0.1,0,1)\n","ckt=transpile(ckt,basis_gates=['u3','cx'],seed_transpiler=0)\n","ckt.draw(output='mpl')"],"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"image/png":"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Ddgt8SZsE9kcptwkTIxm5X3PmiNw0WSrS/A5TR0Dq7N206FNW1J6Jrilnado7FhLZ0oi0iK+HTfEre2kddCZkoiIGENLwkVExBgKJRERMYZCSUREjKFQEhERYyiURETEGAolERExhkJJRESMoVASERFjKJRERMQYCiURETGGQklERIyhUBIREWMolERExBgKJRERMYZCSUREjKFQEhERYyiURETEGAolERExhkJJRESMoVASERFjKJRERMQYCiURETGGQklERIyhUBIREWMolERExBgKpSZYs2YNY8eOpVOnTtjtdqKjo5kyZQqHDh2yujQREZ9gczgcDquLMF1lZSVPPfUUy5cvp2fPnowePZqwsDCysrJYt24da9asITU11eoyRUS8XoDVBXiD5557juXLlzN79mx+8YtfEBBw7cuWn59PeHi4217rxz97w219iYiY4r9/NMOldgqlW/joo49YsmQJqampvPbaa9hstjr7o6KiLKpMRMT3aPruFh599FFWr17NZ599xsCBA60uR0TEpymUbqFdu3ZERkaSk5PjkdfT9J2I+CJXp++0+q4RxcXFlJSU0KtXL6tLERFpFXSm1Ihz584RERFBfHw8mZmZVpcjIuLzdKbUiA4dOhATE8MXX3zBxo0bb9r/5ZdfWlCViIjv0pnSLbz33ntMnDiRgIAAHnnkEfr06cPJkyfZuXMn8fHxvP/++1aXKCLiMxRKLli/fj2LFi1iz549XL58mU6dOjFkyBCef/557rvvPqvLExHxGQolERExhq4piYiIMRRKIiJiDIWSiIgYQ6EkIiLGUCiJiIgxFEoiImIMhZKIiBhDoSQiIsZQKImIiDEUSiIiYgyFkoiIGEOhJCIixlAoiYiIMRRKIiJiDIWSiIgYQ6EkIiLGUCiJiIgxFEoiImIMhZKIiBhDoSQiIsZQKImIiDEUSiIiYgyFkoiIGEOhJCIixlAoiYiIMRRKIiJiDIWSiIgY4/8BHIik+JkmiO4AAAAASUVORK5CYII=\n","text/plain":["<Figure size 539.392x204.68 with 1 Axes>"]},"metadata":{"tags":[]},"execution_count":86}]},{"cell_type":"code","metadata":{"id":"7zoEqgOTB6nC","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}